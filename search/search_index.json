{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"changedet \u00b6 Change Detection Toolbox Free software: MIT Documentation: https://changedet.readthedocs.io Features \u00b6 TODO Credits \u00b6 This package was created with Cookiecutter and the zillionare/cookiecutter-pypackage project template.","title":"home"},{"location":"#changedet","text":"Change Detection Toolbox Free software: MIT Documentation: https://changedet.readthedocs.io","title":"changedet"},{"location":"#features","text":"TODO","title":"Features"},{"location":"#credits","text":"This package was created with Cookiecutter and the zillionare/cookiecutter-pypackage project template.","title":"Credits"},{"location":"api/","text":"Top-level package for changedet. algos special \u00b6 base \u00b6 MetaAlgo \u00b6 Base class for an algorithm __init__ ( self , ** kwargs ) special \u00b6 Constructor Source code in changedet/algos/base.py def __init__ ( self , ** kwargs ): \"\"\" Constructor \"\"\" pass help () classmethod \u00b6 Abstract method to return algorithm information Source code in changedet/algos/base.py @abstractclassmethod def help ( cls ): \"\"\" Abstract method to return algorithm information \"\"\" pass run () classmethod \u00b6 Abstract method to run change detection Source code in changedet/algos/base.py @abstractclassmethod def run ( cls ): \"\"\" Abstract method to run change detection \"\"\" pass imgdiff \u00b6 ImageDiff \u00b6 Calculate difference map Builds a change map by calculating the difference between image 1 & image 2 help () classmethod \u00b6 Print out docstring Source code in changedet/algos/imgdiff.py @classmethod def help ( cls ): \"\"\"Print out docstring\"\"\" print ( cls . __doc__ ) run ( im1 , im2 ) classmethod \u00b6 Parameters: Name Type Description Default im1 str Path to image 1 required im2 str Path to image 2 required Source code in changedet/algos/imgdiff.py @classmethod def run ( cls , im1 , im2 ): \"\"\" Args: im1 (str): Path to image 1 im2 (str): Path to image 2 \"\"\" if Path ( im1 ) . exists () & Path ( im2 ) . exists (): im1 = rio . open ( im1 ) im2 = rio . open ( im2 ) arr1 = im1 . read () arr2 = im2 . read () # Calculate difference map diff = arr1 - arr2 outfile = \"diffmap.tif\" with rio . Env (): profile = im1 . profile with rio . open ( outfile , \"w\" , ** profile ) as dst : dst . write ( diff ) print ( f \"Change map written to { outfile } \" ) irmad \u00b6 IRMAD \u00b6 IRMAD algorithm help () classmethod \u00b6 Abstract method to return algorithm information Source code in changedet/algos/irmad.py @classmethod def help ( cls ): print ( cls . __doc__ ) run ( im1 , im2 ) classmethod \u00b6 Abstract method to run change detection Source code in changedet/algos/irmad.py @classmethod def run ( cls , im1 , im2 ): print ( \"Ello IRMAD here\" ) changedetpipe \u00b6 Main module. ChangeDetPipeline \u00b6 Basic pipeline for running change detection algorithms. Parameters: Name Type Description Default algo str Change detection algorithm to be used required cli \u00b6 Console script for changedet.","title":"modules"},{"location":"api/#changedet.algos","text":"","title":"algos"},{"location":"api/#changedet.algos.base","text":"","title":"base"},{"location":"api/#changedet.algos.base.MetaAlgo","text":"Base class for an algorithm","title":"MetaAlgo"},{"location":"api/#changedet.algos.base.MetaAlgo.__init__","text":"Constructor Source code in changedet/algos/base.py def __init__ ( self , ** kwargs ): \"\"\" Constructor \"\"\" pass","title":"__init__()"},{"location":"api/#changedet.algos.base.MetaAlgo.help","text":"Abstract method to return algorithm information Source code in changedet/algos/base.py @abstractclassmethod def help ( cls ): \"\"\" Abstract method to return algorithm information \"\"\" pass","title":"help()"},{"location":"api/#changedet.algos.base.MetaAlgo.run","text":"Abstract method to run change detection Source code in changedet/algos/base.py @abstractclassmethod def run ( cls ): \"\"\" Abstract method to run change detection \"\"\" pass","title":"run()"},{"location":"api/#changedet.algos.imgdiff","text":"","title":"imgdiff"},{"location":"api/#changedet.algos.imgdiff.ImageDiff","text":"Calculate difference map Builds a change map by calculating the difference between image 1 & image 2","title":"ImageDiff"},{"location":"api/#changedet.algos.imgdiff.ImageDiff.help","text":"Print out docstring Source code in changedet/algos/imgdiff.py @classmethod def help ( cls ): \"\"\"Print out docstring\"\"\" print ( cls . __doc__ )","title":"help()"},{"location":"api/#changedet.algos.imgdiff.ImageDiff.run","text":"Parameters: Name Type Description Default im1 str Path to image 1 required im2 str Path to image 2 required Source code in changedet/algos/imgdiff.py @classmethod def run ( cls , im1 , im2 ): \"\"\" Args: im1 (str): Path to image 1 im2 (str): Path to image 2 \"\"\" if Path ( im1 ) . exists () & Path ( im2 ) . exists (): im1 = rio . open ( im1 ) im2 = rio . open ( im2 ) arr1 = im1 . read () arr2 = im2 . read () # Calculate difference map diff = arr1 - arr2 outfile = \"diffmap.tif\" with rio . Env (): profile = im1 . profile with rio . open ( outfile , \"w\" , ** profile ) as dst : dst . write ( diff ) print ( f \"Change map written to { outfile } \" )","title":"run()"},{"location":"api/#changedet.algos.irmad","text":"","title":"irmad"},{"location":"api/#changedet.algos.irmad.IRMAD","text":"IRMAD algorithm","title":"IRMAD"},{"location":"api/#changedet.algos.irmad.IRMAD.help","text":"Abstract method to return algorithm information Source code in changedet/algos/irmad.py @classmethod def help ( cls ): print ( cls . __doc__ )","title":"help()"},{"location":"api/#changedet.algos.irmad.IRMAD.run","text":"Abstract method to run change detection Source code in changedet/algos/irmad.py @classmethod def run ( cls , im1 , im2 ): print ( \"Ello IRMAD here\" )","title":"run()"},{"location":"api/#changedet.changedetpipe","text":"Main module.","title":"changedetpipe"},{"location":"api/#changedet.changedetpipe.ChangeDetPipeline","text":"Basic pipeline for running change detection algorithms. Parameters: Name Type Description Default algo str Change detection algorithm to be used required","title":"ChangeDetPipeline"},{"location":"api/#changedet.cli","text":"Console script for changedet.","title":"cli"},{"location":"authors/","text":"Credits \u00b6 Development Lead \u00b6 Ashwin Nair ash1995@gmail.com Contributors \u00b6 None yet. Why not be the first?","title":"authors"},{"location":"authors/#credits","text":"","title":"Credits"},{"location":"authors/#development-lead","text":"Ashwin Nair ash1995@gmail.com","title":"Development Lead"},{"location":"authors/#contributors","text":"None yet. Why not be the first?","title":"Contributors"},{"location":"contributing/","text":"Contributing \u00b6 Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. You can contribute in many ways: Types of Contributions \u00b6 Report Bugs \u00b6 Report bugs at https://github.com/ashnair1/changedet/issues. If you are reporting a bug, please include: Your operating system name and version. Any details about your local setup that might be helpful in troubleshooting. Detailed steps to reproduce the bug. Fix Bugs \u00b6 Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it. Implement Features \u00b6 Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it. Write Documentation \u00b6 changedet could always use more documentation, whether as part of the official changedet docs, in docstrings, or even on the web in blog posts, articles, and such. Submit Feedback \u00b6 The best way to send feedback is to file an issue at https://github.com/ashnair1/changedet/issues. If you are proposing a feature: Explain in detail how it would work. Keep the scope as narrow as possible, to make it easier to implement. Remember that this is a volunteer-driven project, and that contributions are welcome :) Get Started! \u00b6 Ready to contribute? Here's how to set up changedet for local development. Fork the changedet repo on GitHub. Clone your fork locally 1 $ git clone git@github.com:your_name_here/changedet.git Ensure poetry is installed. Install dependencies and start your virtualenv: 1 $ poetry install -E test -E doc -E dev Create a branch for local development: 1 $ git checkout -b name-of-your-bugfix-or-feature Now you can make your changes locally. When you're done making changes, check that your changes pass the tests, including testing other Python versions, with tox: 1 $ tox Commit your changes and push your branch to GitHub: 1 2 3 $ git add . $ git commit -m \"Your detailed description of your changes.\" $ git push origin name-of-your-bugfix-or-feature Submit a pull request through the GitHub website. Pull Request Guidelines \u00b6 Before you submit a pull request, check that it meets these guidelines: The pull request should include tests. If the pull request adds functionality, the docs should be updated. Put your new functionality into a function with a docstring, and add the feature to the list in README.md. The pull request should work for Python 3.6, 3.7, 3.8, 3.9 and for PyPy. Check https://github.com/ashnair1/changedet/actions and make sure that the tests pass for all supported Python versions. Tips``` \u00b6 1 $ pytest tests.test_changedet ```To run a subset of tests. Deploying \u00b6 A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in HISTORY.md). Then run: 1 2 3 $ poetry patch # possible: major / minor / patch $ git push $ git push --tags Travis will then deploy to PyPI if tests pass.","title":"contributing"},{"location":"contributing/#contributing","text":"Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. You can contribute in many ways:","title":"Contributing"},{"location":"contributing/#types-of-contributions","text":"","title":"Types of Contributions"},{"location":"contributing/#report-bugs","text":"Report bugs at https://github.com/ashnair1/changedet/issues. If you are reporting a bug, please include: Your operating system name and version. Any details about your local setup that might be helpful in troubleshooting. Detailed steps to reproduce the bug.","title":"Report Bugs"},{"location":"contributing/#fix-bugs","text":"Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.","title":"Fix Bugs"},{"location":"contributing/#implement-features","text":"Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.","title":"Implement Features"},{"location":"contributing/#write-documentation","text":"changedet could always use more documentation, whether as part of the official changedet docs, in docstrings, or even on the web in blog posts, articles, and such.","title":"Write Documentation"},{"location":"contributing/#submit-feedback","text":"The best way to send feedback is to file an issue at https://github.com/ashnair1/changedet/issues. If you are proposing a feature: Explain in detail how it would work. Keep the scope as narrow as possible, to make it easier to implement. Remember that this is a volunteer-driven project, and that contributions are welcome :)","title":"Submit Feedback"},{"location":"contributing/#get-started","text":"Ready to contribute? Here's how to set up changedet for local development. Fork the changedet repo on GitHub. Clone your fork locally 1 $ git clone git@github.com:your_name_here/changedet.git Ensure poetry is installed. Install dependencies and start your virtualenv: 1 $ poetry install -E test -E doc -E dev Create a branch for local development: 1 $ git checkout -b name-of-your-bugfix-or-feature Now you can make your changes locally. When you're done making changes, check that your changes pass the tests, including testing other Python versions, with tox: 1 $ tox Commit your changes and push your branch to GitHub: 1 2 3 $ git add . $ git commit -m \"Your detailed description of your changes.\" $ git push origin name-of-your-bugfix-or-feature Submit a pull request through the GitHub website.","title":"Get Started!"},{"location":"contributing/#pull-request-guidelines","text":"Before you submit a pull request, check that it meets these guidelines: The pull request should include tests. If the pull request adds functionality, the docs should be updated. Put your new functionality into a function with a docstring, and add the feature to the list in README.md. The pull request should work for Python 3.6, 3.7, 3.8, 3.9 and for PyPy. Check https://github.com/ashnair1/changedet/actions and make sure that the tests pass for all supported Python versions.","title":"Pull Request Guidelines"},{"location":"contributing/#tips","text":"1 $ pytest tests.test_changedet ```To run a subset of tests.","title":"Tips```"},{"location":"contributing/#deploying","text":"A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in HISTORY.md). Then run: 1 2 3 $ poetry patch # possible: major / minor / patch $ git push $ git push --tags Travis will then deploy to PyPI if tests pass.","title":"Deploying"},{"location":"history/","text":"History \u00b6 0.1.0 (2021-05-14) \u00b6 First release on PyPI.","title":"history"},{"location":"history/#history","text":"","title":"History"},{"location":"history/#010-2021-05-14","text":"First release on PyPI.","title":"0.1.0 (2021-05-14)"},{"location":"installation/","text":"Installation \u00b6 Stable release \u00b6 To install changedet, run this command in your terminal: 1 $ pip install changedet This is the preferred method to install changedet, as it will always install the most recent stable release. If you don't have pip installed, this Python installation guide can guide you through the process. From source \u00b6 The source for changedet can be downloaded from the Github repo . You can either clone the public repository: 1 $ git clone git://github.com/ashnair1/changedet Or download the tarball : 1 $ curl -OJL https://github.com/ashnair1/changedet/tarball/master Once you have a copy of the source, you can install it with: 1 $ pip install .","title":"installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#stable-release","text":"To install changedet, run this command in your terminal: 1 $ pip install changedet This is the preferred method to install changedet, as it will always install the most recent stable release. If you don't have pip installed, this Python installation guide can guide you through the process.","title":"Stable release"},{"location":"installation/#from-source","text":"The source for changedet can be downloaded from the Github repo . You can either clone the public repository: 1 $ git clone git://github.com/ashnair1/changedet Or download the tarball : 1 $ curl -OJL https://github.com/ashnair1/changedet/tarball/master Once you have a copy of the source, you can install it with: 1 $ pip install .","title":"From source"},{"location":"usage/","text":"Usage \u00b6 To use changedet in a project 1 import changedet","title":"usage"},{"location":"usage/#usage","text":"To use changedet in a project 1 import changedet","title":"Usage"}]}