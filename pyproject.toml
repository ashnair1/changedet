[tool.poetry]
name = "changedet"
version = "0.1.0"
homepage = "https://github.com/ashnair1/changedet"
description = "Change Detection Toolbox."
authors = ["Ashwin Nair <ashnair0007@gmail.com>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
]
packages = [
    { include = "changedet" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.7,<3.10"
fire = "0.4.0"
rasterio = "^1.2.0"
matplotlib = "^3.4.2"
numpy = "^1.20.3"
scipy = "^1.6.3"
termcolor = "^1.1.0"
types-termcolor = "^1.1.2"
tqdm = "^4.61.0"

black  = { version = "20.8b1", optional = true}
isort  = { version = "5.6.4", optional = true}
coverage = {extras = ["toml"], version = "^6.2", optional = true}
flake8  = { version = "3.8.4", optional = true}
flake8-docstrings = { version = "^1.6.0", optional = true }
pytest  = { version = "^6.2.0", optional = true}
pytest-cov  = { version = "^2.10.1", optional = true}
virtualenv  = { version = "^20.2.2", optional = true}
pip  = { version = "^20.3.1", optional = true}
livereload = {version = "^2.6.3", extras = ["doc"]}
mkdocs  = { version = "^1.1.2", extras = ["doc"], optional = true}
mkdocs-include-markdown-plugin  = { version = "^3.0.0", extras = ["doc"], optional = true}
mkdocs-material  = { version = "^7.3.0", extras = ["doc"], optional = true}
mkdocstrings  = { version = "^0.16.0", extras = ["doc"], optional = true}
mkdocs-material-extensions  = { version = "^1.0.1", optional = true}
mkdocs-literate-nav = {version = "^0.4.0", extras = ["doc"], optional = true}
mkdocs-gen-files = {version = "^0.3.3", extras = ["doc"], optional = true}
mkdocs-section-index = {version = "^0.3.1", optional = true}
twine  = { version = "^3.3.0", optional = true}
mkdocs-autorefs = {version = "0.1.1", extras = ["doc"], optional = true}
pre-commit = {version = "^2.12.0", optional = true}
toml = {version = "^0.10.2", optional = true}

# [tool.poetry.group.dev]
# optional = true

# [tool.poetry.group.dev.dependencies]
# black  = { version = "20.8b1", optional = true}
# isort  = { version = "5.6.4", optional = true}
# flake8  = { version = "3.8.4", optional = true}
# flake8-docstrings = { version = "^1.6.0", optional = true }
# pytest  = { version = "^6.2.0", optional = true}
# pytest-cov  = { version = "^2.10.1", optional = true}
# virtualenv  = { version = "^20.2.2", optional = true}
# pip  = { version = "^20.3.1", optional = true}
# twine  = { version = "^3.3.0", optional = true}
# pre-commit = {version = "^2.12.0", optional = true}
# toml = {version = "^0.10.2", optional = true}

# [tool.poetry.group.doc]
# optional = true

# [tool.poetry.group.doc.dependencies]
# optional = true
# livereload = {version = "^2.6.3", optional = true}
# mkdocs  = { version = "^1.1.2"}
# mkdocs-include-markdown-plugin  = { version = "^3.0.0"}
# mkdocs-material  = { version = "^7.1.0"}
# mkdocstrings  = { version = "^0.13.6"}
# coverage = {extras = ["toml"], version = "^6.2"}
# mkdocs-material-extensions  = { version = "^1.0.1"}
# mkdocs-literate-nav = {version = "^0.4.0"}
# mkdocs-gen-files = {version = "^0.3.3"}
# mkdocs-section-index = {version = "^0.3.1"}
# mkdocs-autorefs = {version = "0.1.1"}

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "pytest-cov"
    ]

dev = ["pre-commit", "virtualenv", "pip", "twine", "toml"]

doc = [
    "livereload",
    "mkdocs",
    "mkdocs-gen-files",
    "mkdocs-include-markdown-plugin",
    "mkdocs-literate-nav",
    "mkdocs-material",
    "mkdocs-material-extension",
    "mkdocstrings",
    "mkdocs-autorefs"
    ]

[tool.poetry.scripts]
changedet = 'changedet.cli:main'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 90
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
sections = ['FUTURE','STDLIB','THIRDPARTY','FIRSTPARTY','LOCALFOLDER']
known_first_party = ['changedet']
known_third_party = ['torch','numpy']
force_grid_wrap = 0
line_length = 90
multi_line_output = 3

[tool.coverage.run]
source = ["changedet"]
branch = true
omit = ["changedet/cli.py"]

[tool.coverage.report]
show_missing = true
fail_under = 75
exclude_lines = ["raise NotImplementedError"]